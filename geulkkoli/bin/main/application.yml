spring:
  profiles:
    active: dev
  messages:
    basename: errors
  datasource:
    driver-class-name: org.h2.Driver

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${kakao.client-id}
            client-secret: ${kakao.client-secret}
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            authorization-grant-type: authorization_code
            client-authentication-method: POST

          naver:
            client-id: ${naver.client-id}
            client-secret: ${naver.client-secret}
            redirect-uri: "{baseUrl}/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
            client-authentication-method: POST

          google:
            client-id: ${google.client-id}
            client-secret: ${google.client-secret}
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            scope: email, profile

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
  h2:
    console:
      path: /h2-console
     
  mail:
    host: smtp.gmail.com # 서버 호스트
    port: 587 # 서버 포트
    username: ${mail.username} # 서버 로그인용 이메일 (보안 문제로 환경설정에 설정)
    password: ${mail.password} # 서버 로그인용 비밀번호 (보안 문제로 환경설정에 설정)
    properties:
      mail:
        smtp:
          auth: true # 사용자 인증 시도 여부 (기본값 : false)
          timeout: 5000 # Socket Read Timeout 시간(ms) (기본값 : 무한대)
          starttls:
            enable: true # StartTLS 활성화 여부 (기본값 : false)

  application:
    name: geulkkoli
  cloud:
    vault:
      scheme: http
      authentication: TOKEN
      token: ${vault.token}

  config:
    import: vault://

#JPA log
logging:
  level:
    org:
      hibernate:
        SQL: debug
        type:
          descriptor:
            sql:
              BasicBinder: trace
server:
  error:
    whitelabel:
      enabled: false
    path: /error
    include-exception: false
    include-message: never
